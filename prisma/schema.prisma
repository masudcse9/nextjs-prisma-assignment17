// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id               BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  firstName        String            @db.VarChar(50)
  lastName         String            @db.VarChar(50)
  email            String            @unique
  mobile           String            @db.VarChar(16)
  password         String
  otp              String
  created_at       DateTime          @default(now()) @db.Timestamp(0)
  updated_at       DateTime          @default(now()) @db.Timestamp(0) @updatedAt
  Customers        Customers?
  Categories       Categories?
  Products         Products?
  Invoices         Invoices[]
  Invoice_Products Invoice_Products?
}

model Customers {
  id         BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  name       String     @db.VarChar(200)
  email      String     @db.VarChar(50)
  mobile     String     @db.VarChar(16)
  user_id    BigInt     @unique @db.UnsignedBigInt
  created_at DateTime   @default(now()) @db.Timestamp(0)
  updated_at DateTime   @default(now()) @db.Timestamp(0) @updatedAt
  Users      Users      @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  Invoices   Invoices[]
}

model Categories {
  id         BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  name       String     @db.VarChar(200)
  user_id    BigInt     @unique @db.UnsignedBigInt
  created_at DateTime   @default(now()) @db.Timestamp(0)
  updated_at DateTime   @default(now()) @db.Timestamp(0) @updatedAt
  Users      Users      @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  Products   Products[]
}

model Products {
  id               BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  user_id          BigInt            @unique @db.UnsignedBigInt
  category_id      BigInt            @db.UnsignedBigInt
  name             String            @db.VarChar(200)
  price            String            @db.VarChar(8)
  unit             String            @db.VarChar(40)
  img_url          String            @db.Text
  created_at       DateTime          @default(now()) @db.Timestamp(0)
  updated_at       DateTime          @default(now()) @db.Timestamp(0) @updatedAt
  Users            Users             @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  Categories       Categories        @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  Invoice_Products Invoice_Products?
}

model Invoices {
  id               BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  total            String            @db.VarChar(100)
  discount         String            @db.VarChar(5)
  vat              String            @db.VarChar(5)
  payable          String            @db.VarChar(100)
  user_id          BigInt            @db.UnsignedBigInt
  customer_id      BigInt            @db.UnsignedBigInt
  created_at       DateTime          @default(now()) @db.Timestamp(0)
  updated_at       DateTime          @default(now()) @db.Timestamp(0) @updatedAt
  Users            Users             @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  Customers        Customers         @relation(fields: [customer_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  Invoice_Products Invoice_Products?
}

model Invoice_Products {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  invoice_id BigInt   @unique @db.UnsignedBigInt
  product_id BigInt   @unique @db.UnsignedBigInt
  user_id    BigInt   @unique @db.UnsignedBigInt
  qty        String   @db.VarChar(100)
  sale_price String   @db.VarChar(100)
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0) @updatedAt
  Invoices   Invoices @relation(fields: [invoice_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  Users      Users    @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  Products   Products @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
}
